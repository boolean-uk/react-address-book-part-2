{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dgior\\\\Downloads\\\\adress-book\\\\adress-book\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { Routes, Route } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport ContactList from './components/ContactList';\nimport CreateContact from './components/CreateContact';\nimport ContactDisplay from './components/ContactDetails'; // Assuming you have this component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  async function getData() {\n    try {\n      const response = await fetch('https://jsonplaceholder.typicode.com/users');\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setContacts(data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  }\n  useEffect(() => {\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(ContactList, {\n          contacts: contacts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/contact-list\",\n        element: /*#__PURE__*/_jsxDEV(ContactList, {\n          contacts: contacts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/new-contact\",\n        element: /*#__PURE__*/_jsxDEV(CreateContact, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/contact-list/:id\",\n        element: /*#__PURE__*/_jsxDEV(ContactDisplay, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0QkyoJrXgoisWwht0c6QpeUnBJE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Routes","Route","useEffect","useState","ContactList","CreateContact","ContactDisplay","jsxDEV","_jsxDEV","App","_s","contacts","setContacts","getData","response","fetch","ok","Error","data","json","error","console","className","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dgior/Downloads/adress-book/adress-book/src/App.js"],"sourcesContent":["import './App.css';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport ContactList from './components/ContactList';\r\nimport CreateContact from './components/CreateContact';\r\nimport ContactDisplay from './components/ContactDetails'; // Assuming you have this component\r\n\r\nfunction App() {\r\n  const [contacts, setContacts] = useState([]);\r\n\r\n  async function getData() {\r\n    try {\r\n      const response = await fetch('https://jsonplaceholder.typicode.com/users');\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      const data = await response.json();\r\n      setContacts(data);\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className='content'>\r\n      <Routes>\r\n        <Route path='/' element={<ContactList contacts={contacts} />} />\r\n        <Route path='/contact-list' element={<ContactList contacts={contacts} />} />\r\n        <Route path=\"/new-contact\" element={<CreateContact />} />\r\n        <Route path=\"/contact-list/:id\" element={<ContactDisplay /> } />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAChD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,cAAc,MAAM,6BAA6B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,eAAeU,OAAOA,CAAA,EAAG;IACvB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,CAAC;MAC1E,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCP,WAAW,CAACM,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF;EAEAlB,SAAS,CAAC,MAAM;IACdW,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKc,SAAS,EAAC,SAAS;IAAAC,QAAA,eACtBf,OAAA,CAACR,MAAM;MAAAuB,QAAA,gBACLf,OAAA,CAACP,KAAK;QAACuB,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEjB,OAAA,CAACJ,WAAW;UAACO,QAAQ,EAAEA;QAAS;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChErB,OAAA,CAACP,KAAK;QAACuB,IAAI,EAAC,eAAe;QAACC,OAAO,eAAEjB,OAAA,CAACJ,WAAW;UAACO,QAAQ,EAAEA;QAAS;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5ErB,OAAA,CAACP,KAAK;QAACuB,IAAI,EAAC,cAAc;QAACC,OAAO,eAAEjB,OAAA,CAACH,aAAa;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzDrB,OAAA,CAACP,KAAK;QAACuB,IAAI,EAAC,mBAAmB;QAACC,OAAO,eAAEjB,OAAA,CAACF,cAAc;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACnB,EAAA,CA9BQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAgCZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}