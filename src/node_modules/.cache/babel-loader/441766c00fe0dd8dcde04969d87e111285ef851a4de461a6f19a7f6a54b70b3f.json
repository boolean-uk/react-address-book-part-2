{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dgior\\\\Downloads\\\\adress-book\\\\adress-book\\\\src\\\\components\\\\ContactDetails.js\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { MapContainer, TileLayer, Marker } from 'react-leaflet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ContactDetails(_ref) {\n  _s();\n  let {\n    people,\n    deleteContact\n  } = _ref;\n  const {\n    id\n  } = useParams();\n  const [contact, setContact] = useState(null);\n  useEffect(() => {\n    if (people) {\n      const person = people.find(p => p.id === parseInt(id));\n      setContact(person);\n    }\n  }, [id, people]);\n  if (!contact) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 24\n  }, this);\n  const position = [parseFloat(contact.address.geo.lat), parseFloat(contact.address.geo.lng)];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: `${contact.name}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Username: \", contact.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Email: \", contact.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Phone: \", contact.phone]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Street: \", contact.address.street]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"City: \", contact.address.city]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Website: \", contact.website]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Company: \", contact.company.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => deleteContact(contact.id),\n      children: \"Delete Contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: position,\n        zoom: 13,\n        style: {\n          height: \"300px\",\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: position\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(ContactDetails, \"aVUdeExcGYdU40rk7LJeWu6z5Jo=\", false, function () {\n  return [useParams];\n});\n_c = ContactDetails;\nexport default ContactDetails;\nvar _c;\n$RefreshReg$(_c, \"ContactDetails\");","map":{"version":3,"names":["useParams","useEffect","useState","MapContainer","TileLayer","Marker","jsxDEV","_jsxDEV","ContactDetails","_ref","_s","people","deleteContact","id","contact","setContact","person","find","p","parseInt","children","fileName","_jsxFileName","lineNumber","columnNumber","position","parseFloat","address","geo","lat","lng","name","username","email","phone","street","city","website","company","onClick","center","zoom","style","height","width","url","_c","$RefreshReg$"],"sources":["C:/Users/dgior/Downloads/adress-book/adress-book/src/components/ContactDetails.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { MapContainer, TileLayer, Marker } from 'react-leaflet';\r\n\r\nfunction ContactDetails({ people, deleteContact }) {\r\n  const { id } = useParams();\r\n  const [contact, setContact] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (people) {\r\n      const person = people.find((p) => p.id === parseInt(id));\r\n      setContact(person);\r\n    }\r\n  }, [id, people]);\r\n\r\n  if (!contact) return <div>Loading...</div>;\r\n  const position = [parseFloat(contact.address.geo.lat), parseFloat(contact.address.geo.lng)];\r\n\r\n  return (\r\n    <div>\r\n      <h1>{`${contact.name}`}</h1>\r\n      <p>Username: {contact.username}</p>\r\n      <p>Email: {contact.email}</p>\r\n      <p>Phone: {contact.phone}</p>\r\n      <p>Street: {contact.address.street}</p>\r\n      <p>City: {contact.address.city}</p>\r\n      <p>Website: {contact.website}</p>\r\n      <p>Company: {contact.company.name}</p>\r\n      <button onClick={() => deleteContact(contact.id)}>Delete Contact</button>\r\n\r\n        <div>\r\n           <h2>Location</h2>\r\n           <MapContainer center={position} zoom={13} style={{ height: \"300px\", width: \"100%\" }}>\r\n                <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n                <Marker position={position}></Marker>\r\n           </MapContainer>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContactDetails;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}